apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Values.conf.configmap }}"
data:
#log-and-common
  LOG_PREFIX: "{{ .Values.data.logPrefix }}"
  logging.level.org.opengroup.osdu: "{{ .Values.data.loggingLevelOsdu }}"
  logging.level.org.springframework.web: "{{ .Values.data.loggingLevelSpring }}"
  JAVA_APP_JAR: "{{ .Values.data.javaAppJar }}"
  server.servlet.context-path: "{{ .Values.data.contextPath }}"
  server.port: "{{ .Values.data.serverPort }}"

#db
  ibm.db.url: "http://{{ .Release.Name }}-couchdb:5984"
  ibm.db.user: "{{ .Values.data.dbUser }}"
  ibm.env.prefix: "{{ .Values.data.envPrefix }}"
  ibm.db.password: "{{ .Values.data.dbPassw }}"

#minio
  ibm.cos.endpoint_url: "http://{{ .Release.Name }}-minio:9000"
  #accesskey and secretkey of minio - refer deployment yaml
  ibm.cos.access_key: "{{ .Values.data.accessKey }}"
  ibm.cos.secret_key: "{{ .Values.data.secretKey }}"
  ibm.cos.region: us-east-1
  ibm.cos.signed-url.expiration-days: "1"
  #ibm.cos.subuser: see-deployment-template
  #ibm.cos.subpassword: see-deployment-template
  
  ibm.health-check-uri: "{{ .Values.data.healthCheckUri }}"
  PROVIDER_KEY: IBM
  RECORDS_ROOT_URL: "http://{{ .Release.Name }}-ibm-storage-deploy:8080/api/storage/v2"
  SEARCH_URL: "http://{{ .Release.Name }}-ibm-search-deploy:8080/api/search/v2"

#Authorization  
  AUTHORIZE_API: "http://{{ .Release.Name }}-ibm-entitlement-deploy:8080/api/entitlements/v2"
  osdu.entitlements.url: "http://{{ .Release.Name }}-ibm-entitlement-deploy:8080/api/entitlements/v2"
  DEPLOYMENT_ENVIRONMENT: "{{ .Values.data.deployEnv }}"

#AMQ
  amqphub.amqp10jms.password: "{{ .Values.data.amqpPassword }}"
  amqphub.amqp10jms.username: "{{ .Values.data.amqpUserName }}"
  amqphub.amqp10jms.remote-url: "{{ .Values.data.amqpURL }}"
  
#tenant-validation
  PARTITION_API: "http://{{ .Release.Name }}-ibm-partition-deploy:8080/api/partition/v1"
  partition.keycloak.client_id: "{{ .Values.data.pKCClientId }}"
  partition.keycloak.client_secert: "{{ .Values.data.pKCClientSecret }}"
  partition.keycloak.grant_type: "{{ .Values.data.grantType }}"
  partition.keycloak.password: "{{ .Values.data.pKCPassword }}"
  partition.keycloak.realm: "{{ .Values.data.keycloakRealm }}"
  partition.keycloak.url: "{{ .Values.data.pKCEndPointHost }}"
  partition.keycloak.user: "{{ .Values.data.pKCUser }}"
  partition.keycloak.accept_http: "{{ .Values.data.pKAcceptHttp }}"
  tenantCache.exp.time.in.second: "{{ .Values.data.tenantCacheExpiryInSec }}"
