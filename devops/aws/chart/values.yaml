# Service Config
image: __CONTAINER__
imagePullPolicy: Always
service:
  type: ClusterIP
  port: 8080
  apiPath: /api/file/v2/
  readinessProbeHttpPath: /api/file/v2/liveness_check
  livenessProbeHttpPath: /api/file/v2/liveness_check

environmentVariables:
  - name: APPLICATION_PORT
    value: "{{ .Values.service.port }}"
  - name: AWS_ACCOUNT_ID
    value: "{{ .Values.global.accountID }}"
  - name: AWS_REGION
    value: "{{ .Values.global.region }}"
  - name: ENVIRONMENT
    value: "{{ .Values.global.resourcePrefix }}"
  - name: JAVA_OPTS
    value: "-Xms538M -Xmx900M"
  - name: LOG_LEVEL
    value: "{{ default `INFO` .Values.global.logLevel }}"
  - name: SSM_ENABLED
    value: "True"
  - name: SSL_ENABLED
    value: "false"
  - name: CACHE_CLUSTER_ENDPOINT
    value: "{{ .Values.global.cacheClusterEndpoint }}"
  - name: CACHE_CLUSTER_PORT
    value: "{{ .Values.global.cacheClusterPort }}"
  - name: CACHE_CLUSTER_KEY
    value: "{{ .Values.global.cacheClusterKey }}"
  - name: ENTITLEMENTS_BASE_URL
    value: "http://os-entitlements:8080"
  - name: PARTITION_BASE_URL
    value: "http://os-partition:8080"
  - name: STORAGE_BASE_URL
    value: "http://os-storage:8080"
  - name: SEARCH_HOST
    value: "http://os-search:8080"
  - name: DATASET_BASE_URL
    value: "http://os-dataset:8080"
  - name: TMP_VOLUME_PATH
    value: "/tmp"

# Resource Config
replicaCount: 1
resources:
  limits:
    memory: 900M
  requests:
    cpu: 500m
    memory: 900M
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Security Config
serviceAccountRole: arn:aws:iam::{{ .Values.global.accountID }}:role/osdu-{{ .Values.global.resourcePrefix }}-{{ .Values.global.region }}-{{ include "common.name" . }}
securityContext:
  runAsUser: 10001
  runAsNonRoot: true
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
podSecurityContext: 
  fsGroup: 1337
  seccompProfile:
    type: RuntimeDefault
allowedPrincipals:
  - cluster.local/ns/istio-system/sa/istio-ingressgateway
  - cluster.local/ns/{{ .Release.Namespace }}/sa/os-dataset
  - cluster.local/ns/aws-binary-dms/sa/binary-dms
  - cluster.local/ns/osdu-airflow/sa/airflow-dag-upload
  - cluster.local/ns/osdu-airflow/sa/airflow-worker
  - cluster.local/ns/osdu-ingest/sa/os-data-workflow
  - cluster.local/ns/osdu-ingest/sa/os-ingestion-workflow
  - cluster.local/ns/osdu-seismic-ddms/sa/os-seismic-store
  - cluster.local/ns/osdu-well-delivery/sa/os-welldelivery
  - cluster.local/ns/osdu-wellbore-ddms/sa/os-wellbore-ddms
