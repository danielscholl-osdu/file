# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

LOG_PREFIX=file

server.servlet.contextPath=/api/file/
logging.level.org.springframework.web=${LOG_LEVEL:INFO}

server.port=${APPLICATION_PORT:8080}
aws.resource.prefix=${ENVIRONMENT}
# aws.sts-role-arn=${STS_ROLE_ARN:""}
aws.ssm=${SSM_ENABLED:True}

dataset.api=${DATASET_BASE_URL}/api/dataset/v1


RECORDS_ROOT_URL=${STORAGE_BASE_URL}/api/storage/v2
AUTHORIZE_API=${ENTITLEMENTS_BASE_URL}/api/entitlements/v2
PARTITION_API=${PARTITION_BASE_URL}/api/partition/v1

OSDU_ENTITLEMENTS_URL=${ENTITLEMENTS_BASE_URL}/api/entitlements/v2
storage.api=${STORAGE_BASE_URL}/api/storage/v2
SEARCH_QUERY_RECORD_HOST=${SEARCH_HOST}/api/search/v2/query
SEARCH_BATCH_SIZE=1000
SEARCH_QUERY_LIMIT=1000

## AWS ElastiCache configuration
aws.elasticache.cluster.group.endpoint=${CACHE_CLUSTER_ENDPOINT}
aws.elasticache.cluster.group.port=${CACHE_CLUSTER_PORT}


## AWS DynamoDB configuration
aws.dynamodb.key=kind
aws.dynamodb.fileLocationRepositoryTable.ssm.relativePath=${FILE_LOCATION_REPOSITORY_SSM_RELATIVE_PATH:file/FileLocationRepositoryTable}

## AWS S3 configuration
aws.s3.region=${AWS_REGION}
aws.s3.endpoint=s3.${AWS_REGION}.amazonaws.com
aws.s3.datafile-bucket=${S3_DATAFILE_BUCKET:dummybucket}
aws.s3.datafiles.staging-bucket=${aws.resource.prefix}-${aws.s3.datafile-bucket}
aws.s3.datafiles.persistent-bucket=${aws.resource.prefix}-${aws.s3.datafile-bucket}
aws.s3.datafiles.path-prefix=v1/
aws.s3.signed-url.expiration-days=${S3_SIGNED_URL_EXPIRATION_IN_DAYS:1}

server.ssl.enabled=${SSL_ENABLED:true}
server.ssl.key-store-type=PKCS12
server.ssl.key-store=${SSL_KEY_STORE_PATH:/certs/osduonaws.p12}
server.ssl.key-alias=${SSL_KEY_ALIAS:osduonaws}
server.ssl.key-password=${SSL_KEY_PASSWORD:}
server.ssl.key-store-password=${SSL_KEY_STORE_PASSWORD:}

aws.environment=${ENVIRONMENT}
aws.sns.region=${AWS_REGION}

spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration

# container cycles without this
spring.cloud.compatibility-verifier.enabled=false

osdu.version.info.gitPropertiesPath=/git.properties
