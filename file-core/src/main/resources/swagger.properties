#Manage common SpringDoc and OpenAPI related properties

#SpringDoc related properties
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.doc-expansion=none
springdoc.swagger-ui.path=/v2/swagger
springdoc.swagger-ui.displayOperationId=true
springdoc.api-docs.path=/v2/api-docs

#OpenAPI 3.0 - File properties
api.title=File Service
api.description=This service allows users to manage files on the  Data Platform. File Management includes uploads, downloads and creation of metadata record for the file.
api.version=2.0.0
api.contact.name=OSDU Data Platform Team
api.contact.email=dps@OSDU.org
api.license.name=Apache 2.0
api.license.url=https://www.apache.org/licenses/LICENSE-2.0.html
api.server.url=${server.servlet.contextPath}

#Delivery API related properties
deliveryApi.getFileSignedURL.summary=Get File Signed URL
deliveryApi.getFileSignedURL.description=Returns delivery instructions for File(s) using SRNs

#File API related properties
fileApi.getFile.summary=Get File
fileApi.getFile.description=Get File

#File Collection Dms API related properties
fileCollectionDmsApi.getStorageInstructions.summary=Get Storage Instructions
fileCollectionDmsApi.getStorageInstructions.description=Get storage/upload location file-collection datasets
fileCollectionDmsApi.getRetrievalInstructions.summary=Get Retrieval Instructions
fileCollectionDmsApi.getRetrievalInstructions.description=Generate retrieval instructions (Eg - Signed URLs) for datasets
fileCollectionDmsApi.copyDms.summary=Copy Dms
fileCollectionDmsApi.copyDms.description=Copy file collection from the dataset registries

#File Delivery API related properties
fileDeliveryApi.downloadURL.summary=Gets a URL to download the file
fileDeliveryApi.downloadURL.description=Gets a URL for downloading the file associated with the unique `id`.By default, the download URL is valid for 7 days. \
<p> **Required roles**: `service.file.viewers`. Users added to groups `users.datalake.viewers`,`users.datalake.editors`, `users.datalake.admins`, `users.datalake.ops` would be added to group `service.file.viewers` by default.</p>

#File Dms API related properties
fileDmsApi.getStorageInstructions.summary=Get Storage Instructions
fileDmsApi.getStorageInstructions.description=Get storage/upload location file-collection datasets
fileDmsApi.getRetrievalInstructions.summary=Get Retrieval Instructions
fileDmsApi.getRetrievalInstructions.description=Generate retrieval instructions (Eg - Signed URLs) for datasets
fileDmsApi.copyDms.summary=Copy Dms
fileDmsApi.copyDms.description=Copy file collection from the dataset registries

#File List API related properties
fileListApi.getFileList.summary=Get File List
fileListApi.getFileList.description=Allows the application to audit the attempted file uploads. The method is internal and isn't available for third-party applications.

#File Location API related properties
fileLocationApi.getLocation.summary=Get a location in Landing Zone to upload a file.
fileLocationApi.getLocation.description=Create a new location in the landing zone to upload a file. \
<p>**Required roles**: `users.datalake.editors` or `users.datalake.admins` or `users.datalake.ops`.</p>
fileLocationApi.getFileLocation.summary=Get File Location
fileLocationApi.getFileLocation.description=Returns file `Location` and `Driver`.
fileLocationApi.getLocationFile.summary=Get a location in Landing Zone to upload a file.
fileLocationApi.getLocationFile.description=Gets a temporary signed URL to upload a file (Service does not upload the file by itself, User needs to use this URL to upload the file). The generated URL is time bound and by default expires by 7 days maximum. \
<p> User will receive a FileSource in the response.This is the relative path where the uploaded file will persist. Once the file is uploaded, FileSource can then be used to post metadata of the file.</p> \
<p> **Required roles**: `service.file.editors`. Users added to groups `users.datalake.editors`, `users.datalake.admins`, `users.datalake.ops` would be added to group `service.file.editors` by default.</p>

#File Metadata API related properties
fileMetadataApi.postFilesMetadata.summary=Creates a metadata for a file
fileMetadataApi.postFilesMetadata.description=This API creates a metadata record for a file that is already uploaded. The Metadata is linked to the file via `FileSource` provided in the request body. \
<p> If `FileSource` attribute is missing in the request body or there is no file present, then the request fails with an error. </p>\
<p> When metadata is successfully updated in the system, it returns the `Id` of the file metadata record. </p>\
<p> **Required roles**: `service.file.editors`. Users added to groups `users.datalake.editors`, `users.datalake.admins`, `users.datalake.ops` would be added to group `service.file.editors` by default.</p>
fileMetadataApi.getFileMetadataById.summary=Gets metadata record for the given id
fileMetadataApi.getFileMetadataById.description=Gets the latest version of File metadata record identified by the given id. \
<p> **Required roles**: `service.file.editors`. Users added to groups `users.datalake.editors`, `users.datalake.admins`, `users.datalake.ops` would be added to group `service.file.editors` by default.</p>
fileMetadataApi.deleteFileMetadataById.summary=Deletes metadata record & file associated with that record for the given id
fileMetadataApi.deleteFileMetadataById.description=Deletes the File metadata record identified by the given id and file associated with that metadata record. \
<p> **Required roles**: `users.datalake.editors`  or `users.datalake.admins`.</p>

#Info & Health API related properties
infoApi.info.summary=Version info
infoApi.info.description=For deployment available public `/info` endpoint, which provides build and git related information.
healthChecksApi.livenessCheck.summary=Liveness Check endpoint
healthChecksApi.livenessCheck.description=For deployment available public `/liveness_check` endpoint.
healthChecksApi.readinessCheck.summary=Readiness Check endpoint
healthChecksApi.readinessCheck.description=For deployment available public `/readiness_check` endpoint.
